<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.4.2
    site: https://github.com/ksky521/nodePPT
    date: 2016年8月26日
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>接口开发、联调、测试 演示 - By Troy Zhang</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.colors.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>接口开发、联调、测试</h1>
<h3>分享者：Troy Zhang</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>分享目的</h1>
<ul class="bounceIn">
<li>效率（开发、联调）</li>
<li>加深对HTTP协议的理解</li>
<li>Api自动化测试</li>
<li>javascript应用场景</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>HTTP抓包</h1>
<table>
<thead>
<tr>
<th>工具</th>
<th>OS</th>
<th>特点</th>
<th>教程 </th>
</tr>
</thead>
<tbody>
<tr>
<td> <a href="http://www.telerik.com/fiddler" target="_blank">Fiddler</a></td>
<td>Windows</td>
<td><strong>监控</strong>机器上发送的Http(s)请求<br> 模拟发送Get/Post请求<br>可作为<strong>代理</strong></td>
<td><a href="http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f73260878e482a958448e435061e5a00b0e77e484b578ed82f2750f51218bded367034033db59bd58a4ec0bb93292a8d273e671cf11b548c47bb8e1b65972fc401bff947b0fae732e2f494959d&amp;p=8b2a97299fb111a05be6912a1e5e8b&amp;newp=8b2a97128d821deb08e29775080789231610db2151d4d31f6b82c825d7331b001c3bbfb423231302d6c1796404ac495de8f436793d092ba3dda5c91d9fb4c57479df7c752c58&amp;user=baidu&amp;fm=sc&amp;query=fiddler+http&amp;qid=eed90de700111576&amp;p1=9" target="_blank">Fiddler教程</a><br><a href="http://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/ConfigureForiOS" target="_blank">SSL Certificates</a> </td>
</tr>
<tr>
<td> <a href="http://www.getpostman.com/" target="_blank">PostMan</a></td>
<td>跨平台</td>
<td>可模拟发送Get/Post请求<br>保存请求、重命名<br>环境变量、批量测试</td>
<td><a href="http://www.jianshu.com/p/615f668d91a6" target="_blank">API开发神器-Postman</a> <br><a href="https://www.getpostman.com/docs/sandbox" target="_blank">Testing Sandbox</a> <br><a href="http://blog.getpostman.com/2016/06/26/using-postman-proxy-to-capture-and-inspect-api-calls-from-ios-or-android-devices/" target="_blank">代理iPhone/Android设备</a></td>
</tr>
<tr>
<td> <a href="https://www.charlesproxy.com/" target="_blank">Charles</a></td>
<td>跨平台</td>
<td><strong>监控</strong>机器上发送的Http(s)请求<br> 模拟发送Get/Post请求<br>可作为<strong>代理</strong></td>
<td><a href="http://blog.devtang.com/2015/11/14/charles-introduction/" target="_blank">Charles 从入门到精通</a> <br> <a href="http://www.jianshu.com/p/7a332f6ccfbd" target="_blank">Charles中文乱码</a><br><a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/" target="_blank">SSL Certificates</a></td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>代理</strong>工具的用途：举个例子，你可以在iPhone上配置网络代理为你PC机器上<code>Fiddler</code>/<code>Charles</code>监听的IP、端口，然后<code>Fiddler</code>/<code>Charles</code>就可以监听到你iPhone设备上发送的Http(s)请求。</p>
</blockquote>

</article></section></slide>
<slide class="slide" data-transition="vertical3d"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Fiddler</h1>
<ul class="rollIn">
<li>演示抓包</li>
<li>Https</li>
<li>iPhone代理</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Charles（青花瓷）</h1>
<ul class="rollIn">
<li>模拟器演示抓包</li>
<li>iPhone代理</li>
<li><code>Filter</code></li>
<li><code>Rewrite</code><ul class="rollIn">
<li>乱码原因-解决</li>
<li>HTTP协议（缓存、断点续传、cookie-session）</li>
</ul>
</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Postman</h1>
<ul class="moveIn">
<li>模拟Get/Post请求</li>
<li>传值</li>
<li><code>header</code>/<code>body</code>/<code>pre-request</code>/<code>test</code></li>
<li><code>sandbox</code><ul>
<li>base64</li>
</ul>
</li>
<li>环境变量</li>
<li><code>Runner</code> - Api自动化测试</li>
<li>Command line tool<ul>
<li><code>newman -e env_yesanpo.json -c collection.json</code></li>
<li>CI</li>
</ul>
</li>
</ul>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>HTTP协议</h1>
<table>
<thead>
<tr>
<th>版本</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>HTTP/0.9</td>
<td></td>
<td>只有<code>GET</code>请求</td>
</tr>
<tr>
<td>HTTP/1.0</td>
<td><code>GET</code>,<code>POST</code>,<code>HEAD</code>,<code>Status Code</code>,<code>Cache</code>,<code>Encoding</code></td>
<td>每个<code>TCP</code>连接只能发送一次请求，数据发送完毕,连接关闭，如果要请求其它资源，须新建<code>TCP</code>连接，<code>Connection: keep-alive</code>浏览器支持不一样</td>
</tr>
<tr>
<td>HTTP/1.1</td>
<td><code>PUT</code>,<code>DELETE</code><br><br>TCP连接默认不关闭，可被多个请求复用，不声明<code>Connection: keep-alive</code>,客户端和服务器发现对方一段时间没有活动，可主动关闭连接 <br><br><code>pipelining</code>:同一个TCP连接里面，客户端可以同时发送多个请求，但服务器还是按照收到的顺序返回。</td>
<td><code>队头堵塞</code></td>
</tr>
</tbody>
</table>

</article></section></slide>
<slide class="slide" data-transition="horizontal3d"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>HTTP协议</h1>
<table>
<thead>
<tr>
<th>版本</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>SPDY</code></td>
<td>主要解决 HTTP/1.1 效率不高的问题</td>
<td></td>
</tr>
<tr>
<td><a href="https://http2.github.io/http2-spec/" target="_blank">HTTP/2</a></td>
<td><code>frame</code>二进制<br><br><code>多工</code>:客户端和浏览器都可以同时发送多个请求或回应，不用按照顺序，避免&quot;队头堵塞&quot;<br><br>取消请求,以前需要关闭<code>TCP</code>连接，现在<code>RST_STREAM</code>信号，<code>TCP</code>连接还打开着，可以被其他请求使用<br><br><code>server push</code></td>
<td></td>
</tr>
</tbody>
</table>

</article></section></slide>
<slide class="slide" data-transition="glue"><section class="slide-wrapper"><hgroup>
<h1>javascript应用场景</h1>

</hgroup><article>

<ul class="bounceIn">
<li>前端</li>
<li>node.js</li>
<li>html/js构建（blog构建）</li>
<li>Mobile<ul>
<li><i class="fa fa-html5"></i> Html5</li>
<li>react-native</li>
<li>weex</li>
<li><code>ECMAScript</code></li>
<li><i class="fa fa-apple"></i> <i class="fa fa-android"></i> Native 打包</li>
</ul>
</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>谢谢大家!</h1>

</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.4.2</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'zoomin',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>


<!--placeholder-->
</body>
</html>
